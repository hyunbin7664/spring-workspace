<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">
	
	<!-- 
		List<User> getUsers()
	 -->
	<select id="getUsers" resultType="User">
		select
			user_no				userNo
		  , username
		  , name
		  , email
		  , deleted
		  , created_date		createdDate
		  , updated_date		updatedDate
		from
			app_users
		order by
			user_no asc
	</select>
	
	<!-- 
		void insertUser(User user);
	 -->
	<insert id="insertUser" parameterType="User">
		<selectKey keyProperty="userNo" 
					resultType="int" 
					order="BEFORE">
			select app_users_seq.nextval
			from dual
		</selectKey>
		
		insert into app_users
		(user_no, username, password, name, email)
		values
		(#{userNo}, #{username}, #{password}, #{name}, #{email})
	</insert>
	
	<!-- 
		void insertUserRole(@Param("userNo") int userNo, 
					        @Param("roleName") String roleName);
	-->
	<insert id="insertUserRole">
		insert into app_user_roles
		(user_no, role_name)
		values
		(#{userNo}, #{roleName})
	</insert>
	
	<!-- 
		User getUserByUsername(String username); 
	-->
	<select id="getUserByUsername" resultType="User">
		select
			user_no				userNo
		  , username
		  , password
		  , name
		  , email
		  , deleted
		  , created_date		createdDate
		  , updated_date		updatedDate
		from
			app_users
		where
			username = #{username}
	</select>
	
	<!-- 
		User getUserByUsernameWithRoleNames(String username); 
	-->
	<resultMap type="User" id="UserResultMapWithRoleNames">
		<id column="user_no" property="userNo"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="name" property="name"/>
		<result column="email" property="email"/>
		<result column="deleted" property="deleted"/>
		<collection property="roleNames" 
		            column="user_no"
		            ofType="string"
		            select="getRoleNamesByUserNo"/>
	</resultMap>
	
	<select id="getUserByUsernameWithRoleNames"
			resultMap="UserResultMapWithRoleNames">
		select
    		a.user_no
    	  , a.username
    	  , a.password
    	  , a.name
    	  , a.email
    	  , a.deleted
		from 
			app_users a
		where
			a.username = #{username}
	</select>
	
	<!-- 
		List<String> getRoleNamesByUserNo(int userNo);
	 -->
	<select id="getRoleNamesByUserNo" resultType="string">
		select
			role_name
		from
			app_user_roles
		where
			user_no = #{userNo}
	</select>
	
	<!-- 
		User getUserByEmail(String email); 
	-->
	<select id="getUserByEmail" resultType="User">
		select
			user_no				userNo
		  , username
		  , password
		  , name
		  , email
		  , deleted
		  , created_date		createdDate
		  , updated_date		updatedDate
		from
			app_users
		where
			email = #{email}
	</select>	
	
	<!-- 
		User getUserByUserNo(int userNo); 
	-->
	<select id="getUserByUserNo" resultType="User">
		select
			user_no				userNo
		  , username
		  , password
		  , name
		  , email
		  , deleted
		  , created_date		createdDate
		  , updated_date		updatedDate
		from
			app_users
		where
			user_no = #{userNo}
	</select>
	

</mapper>