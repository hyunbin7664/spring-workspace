	
	
	mybatis mapper 파일의 namespace
	
	PostMapper.xml
	<mapper namespace="com.example.demo.PostMapper">
		<select id="getTotalRows">
			select count(*) from app_posts
		</select>
	</mapper>
	
	CommentMapper.xml
	<mapper namespace="com.example.demo.CommentMapper">
		<select id="getTotalRows">
			select count(*) from app_comments
		</select>
	</mapper>
	
	XML Namespace
	XML 문서 혹은 HTML 문서에서 서로 다른 XML 문서나 HTML 문서에서 정의된 요소(태그)나 속성을 
	이름 충돌하지 않도록 고유한 이름 영역을 정의하는 방법이다.
	
	사용자 정보를 표현하는 XML 문서
	<?xml version="1.0" encoding="utf-8" ?>
	<data>
		<no>1</no>
		<name>홍길동</name>
		<phone>010-1111-1111</name>
	</data>
	
	상품 정보를 표현하는 XML 문서
	<?xml version="1.0" encoding="utf-8" ?>
	<data>
		<no>2024-1001</no>
		<name>아이폰16 프로</name>
		<company>애플</company>
		<price>1600000</price>
	</data>
	
	주문 정보를 표현하는 XML 문서
	<?xml version="1.0" encoding="utf-8" ?>
	<data xmlns="http://www.example.com/order"
		  xmlns:user="http://www.example.con/user"
		  xmlns:product="http://www.example.con/product">
		<!-- 주문정보 -->
		<no>2025062412330001</no>
		<qty>3</qty>
		<price>3200000</price>
		<date>2025-06-24</date>

		<!-- 주문자 정보 -->
		<user:no>1</user:no>
		<user:name>홍길동</user:name>
		<user:phone>010-1111-1111</user:phone>
		
		<!-- 주문 상품 정보 -->
		<product:no>1</product:no>
		<product:name>아이폰16</product:name>
		<product:phone>010-1111-1111</product:phone>
	</data>
	
	
	--------------------------------------------------------------------
	
	com.example.demo.vo
		테이블의 한 행을 표현하는 클래스
	com.example.demo.dto
		계층과 계층, UI와 로직간에 주고 받는 데이터를 표현하는 클래스
		PageDTO
			String opt;
			String keyword;
			List<T> items;
			Pagination paging;
	
	com.example.demo.web.form
		폼 입력값과 매핑되는 클래스
	com.example.demo.web.request
		ajax 요청시 전달되는 JSON 형식의 값과 매핑되는 클래스
	com.example.demo.web.response
		ajax 응답시 전달되는 JSON 형식의 값과 매핑되는 클래스
		
	--------------------------------------------------------------------
	JSP
	<script>
		// model의 값을 사용
		let postNo = ${post.postNo}
		let username = <sec:authentication property="principal.username">
		
		// 텍스트 템플릿 사용
		let title = "연습";
		let content = "연습입니다.";
		
		let htmlContent = `
			<h1>\${title}</h1>
			<p>\${content}</p>
			<p>${post.postNo}</p>
			<p>\${postNo}</p>
		`
	</script>
	
	Thymelieaf
	<script>
		// model의 값을 사용
		let postNo = [[${post.postNo}]]
		let username = '[[${#authentication.principal.username}]]';
		
		// 텍스트 템플릿 사용
		let title = "연습";
		let content = "연습입니다.";
		
		let htmlContent = `
			<h1>${title}</h1>
			<p>${content}</p>
			<p>[[${post.postNo}]]</p>
			<p>${postNo}</p>
		`
	</script>
	
	
	
	
	
	