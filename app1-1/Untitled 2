	
	
	javascript의 JSON API
	
	jsontext
		Object 구조
			name:value 쌍의 집합이다.
			JSON API로 변환하면 javascript 객체, java의 자바빈즈, java의 Map 등으로 변환
			'{
			  "id":100, 
			  "name":"홍길동", 
			  "salary":3000000, 
			  "commissionPct":0.1, 
			  "expired":"false"
			 }'
			
		Array 구조
			순서화된 값들의 리스트다.
			JSON API로 변환하면 javascript 배열, java의 List 변환
			
			'["홍길동", "김유신", "강감찬"]'
			'[{"no":1, "title":"이것이 자바다"}, {"no":2, "title":"자바의 정석"}]'
	
	jsontext -> javascript object, javascript array
	JSON.parse(jsontext)
		- json 형식의 텍스트를 자바스트립트 객체 혹은 배열로 변환한다.
	
	javascript object, javascript array -> jsontext
	JSON.stringify(object of array)
	
	
	
	
	

	1. Todo.java와 Category.java 정의하기
	
		class Todo {
			int todoNo;
			int userNo;
			int catNo;
			String title;
			String content;
			Date dueDate;
			Date completeDate;
			String status;
			Date createdDate;
			Date updatedDate;
			}
	
		class Category {
			int catNo;
			String name;
		}
	
	2. TodoMapper.java와 CategoryMapper.java 정의하기
	3. TodoMapper.xml와 CategoryMapper.xml 정의하기
	4. TodoService.java 정의하기
	5. TodoController.java 정의하기
	
	1. 일정 목록 조회 요청 처리하기
		요청 방식 : GET
		요청 URL : /todos/list
		view 이름 : todos/list
	2. 일정 상세 정보 조회 요청 처리하기
		요청 방식 : GET
		요청 URL : /todos/detail?no=3
		view 이름 : todos/detail
	3. 신규 일정 등록 요청 처리하기
		- 일정 등록 폼 요청
			요청 방식 : GET
			요청 URL : /todos/register
			view 이름 : todos/register
		- 일정 등록
			요청 방식 : POST
			요청 URL : /todos/register
			폼 데이터 : catNo=1001&title=주간회의
					   &content=주간회의합니다.&dueDate=2025-06-12
			view 이름 : redirect:/todos/list
	4. 일정 완료 요청 처리하기
	   요청 방식 :  GET
	   요청 URL : /todos/complete?no=일정번호   
	   view 이름 : redirect:/todos/detail?no=일정번호
	
	5. 일정 삭제 요청 처리하기
	   요청 방식 :  GET
	   요청 URL : /todos/remove?no=일정번호   
	   view 이름 : redirect:/todos/list
		
		